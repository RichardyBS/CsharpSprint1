// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottoSprint.Data;

#nullable disable

namespace MottoSprint.Migrations
{
    [DbContext(typeof(MottoSprintDbContext))]
    [Migration("20250929221955_InitialSQLiteFixed")]
    partial class InitialSQLiteFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("MottoSprint.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("TELEFONE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TB_CLIENTE");
                });

            modelBuilder.Entity("MottoSprint.Models.ConfiguracaoNotificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("EmailNotificacao")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("EMAIL_NOTIFICACAO");

                    b.Property<bool>("NotificarEntrada")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NOTIFICAR_ENTRADA");

                    b.Property<bool>("NotificarSaida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NOTIFICAR_SAIDA");

                    b.Property<string>("TelefoneNotificacao")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("TELEFONE_NOTIFICACAO");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TB_CONFIGURACAO_NOTIFICACAO");
                });

            modelBuilder.Entity("MottoSprint.Models.EstatisticasEstacionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateTime>("DataReferencia")
                        .HasColumnType("TEXT")
                        .HasColumnName("DATA_REFERENCIA");

                    b.Property<decimal>("TempoMedioPermanencia")
                        .HasColumnType("TEXT")
                        .HasColumnName("TEMPO_MEDIO_PERMANENCIA");

                    b.Property<int>("TotalEntradas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TOTAL_ENTRADAS");

                    b.Property<int>("TotalSaidas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TOTAL_SAIDAS");

                    b.Property<int>("TotalVagas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TOTAL_VAGAS");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.Property<int>("VagasLivres")
                        .HasColumnType("INTEGER")
                        .HasColumnName("VAGAS_LIVRES");

                    b.Property<int>("VagasOcupadas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("VAGAS_OCUPADAS");

                    b.HasKey("Id");

                    b.ToTable("TB_ESTATISTICAS_ESTACIONAMENTO");
                });

            modelBuilder.Entity("MottoSprint.Models.FilaEntrada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("MotoPlaca")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOTO_PLACA");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("TimestampEntrada")
                        .HasColumnType("TEXT")
                        .HasColumnName("TIMESTAMP_ENTRADA");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.Property<Guid>("VagaId")
                        .HasColumnType("TEXT")
                        .HasColumnName("VAGA_ID");

                    b.HasKey("Id");

                    b.ToTable("TB_FILA_ENTRADA");
                });

            modelBuilder.Entity("MottoSprint.Models.FilaSaida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("MotoPlaca")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOTO_PLACA");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("TimestampSaida")
                        .HasColumnType("TEXT")
                        .HasColumnName("TIMESTAMP_SAIDA");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.Property<Guid>("VagaId")
                        .HasColumnType("TEXT")
                        .HasColumnName("VAGA_ID");

                    b.HasKey("Id");

                    b.ToTable("TB_FILA_SAIDA");
                });

            modelBuilder.Entity("MottoSprint.Models.LogMovimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Detalhes")
                        .HasColumnType("TEXT")
                        .HasColumnName("DETALHES");

                    b.Property<string>("MotoPlaca")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOTO_PLACA");

                    b.Property<DateTime>("TimestampEvento")
                        .HasColumnType("TEXT")
                        .HasColumnName("TIMESTAMP_EVENTO");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("TIPO_MOVIMENTACAO");

                    b.Property<Guid>("VagaId")
                        .HasColumnType("TEXT")
                        .HasColumnName("VAGA_ID");

                    b.HasKey("Id");

                    b.ToTable("TB_LOG_MOVIMENTACAO");
                });

            modelBuilder.Entity("MottoSprint.Models.MotoDb", b =>
                {
                    b.Property<string>("Placa")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("PLACA");

                    b.Property<int?>("Ano")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ANO");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ATIVA");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<string>("Cor")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("COR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("MODELO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Placa");

                    b.HasIndex("ClienteId");

                    b.ToTable("TB_MOTO");
                });

            modelBuilder.Entity("MottoSprint.Models.MotoNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<bool>("Lida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("LIDA");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("MENSAGEM");

                    b.Property<string>("MotoPlaca")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("MOTO_PLACA");

                    b.Property<DateTime>("TimestampEvento")
                        .HasColumnType("TEXT")
                        .HasColumnName("TIMESTAMP_EVENTO");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("TIPO_MOVIMENTACAO");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.Property<Guid>("VagaId")
                        .HasColumnType("TEXT")
                        .HasColumnName("VAGA_ID");

                    b.HasKey("Id");

                    b.ToTable("TB_NOTIFICACAO_MOTO");
                });

            modelBuilder.Entity("MottoSprint.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<bool>("IsRead")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("GENERAL");

                    b.Property<string>("PlacaMoto")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("NORMAL");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("VagaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("IsRead");

                    b.HasIndex("NotificationType");

                    b.HasIndex("PlacaMoto");

                    b.HasIndex("Priority");

                    b.HasIndex("VagaId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MottoSprint.Models.ParkingSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("OccupiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpotNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("VehiclePlate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsOccupied");

                    b.HasIndex("SpotNumber")
                        .IsUnique();

                    b.ToTable("ParkingSpots");
                });

            modelBuilder.Entity("MottoSprint.Models.VagaDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ATIVA");

                    b.Property<string>("Coluna")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("COLUNA");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("Linha")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("LINHA");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("NUMERO");

                    b.Property<bool>("Ocupada")
                        .HasColumnType("INTEGER")
                        .HasColumnName("OCUPADA");

                    b.Property<string>("PlacaMoto")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("PLACA_MOTO");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.HasIndex("PlacaMoto");

                    b.ToTable("TB_VAGA");
                });

            modelBuilder.Entity("MottoSprint.Models.MotoDb", b =>
                {
                    b.HasOne("MottoSprint.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MottoSprint.Models.VagaDb", b =>
                {
                    b.HasOne("MottoSprint.Models.MotoDb", "Moto")
                        .WithMany()
                        .HasForeignKey("PlacaMoto");

                    b.Navigation("Moto");
                });
#pragma warning restore 612, 618
        }
    }
}
